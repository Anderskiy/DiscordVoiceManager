import disnake
from disnake.ext import commands
from disnake.utils import get
import json
import yaml


voice_file = 'voice.json'
config_file = 'config.yml'
try:
    with open(voice_file, 'r') as file:
        voice = json.load(file)
except FileNotFoundError:
    voice = {}

class NameModal(disnake.ui.Modal):
    def __init__(self, arg) -> None:
        self.arg = arg
        components = [
            disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", custom_id="namemodal")
        ]

        super().__init__(title="–°–º–µ–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞", components=components, custom_id="namemodalg")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        name = interaction.text_values["namemodal"]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(name=name)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω–æ –Ω–∞ {name}!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class LimitModal(disnake.ui.Modal):
    def __init__(self, arg) -> None:
        self.arg = arg
        components = [
            disnake.ui.TextInput(label="–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", placeholder="–í–≤–µ–¥–∏—Ç–∏ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", custom_id="limitmodal")
        ]

        super().__init__(title="–°–º–µ–Ω–∞ –ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–æ–π—Å–∞", components=components, custom_id="limitmodalg")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        limit = int(interaction.text_values["limitmodal"])
        if limit < 1 or limit > 99:
            await interaction.response.send_message("–ó–Ω–∞—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –º–µ–∂–¥—É 1 –∏ 99!", ephemeral=True)
            return
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(user_limit=limit)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–õ–∏–º–∏—Ç –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω –Ω–∞ {limit}", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class KickSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectkick",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if player.voice and player.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await player.move_to(None)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{player.mention} –∫–∏–∫–Ω—É—Ç –∏–∑ –≤–∞—à–µ–π –∫–æ–º–∞–Ω—Ç—ã!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class KickSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(KickSelect())

class InviteSelectButton(disnake.ui.View):
    message: disnake.Message
    def __init__(self, player):
        super().__init__(timeout=None)
        self.player = player

    @disnake.ui.button(style=disnake.ButtonStyle.gray, label="–û—Ç –º–µ–Ω—è", custom_id="personally")
    async def personally(self, button: disnake.ui.Button, interaction):
        await interaction.response.defer()
        member = interaction.user
        voice_state = member.voice
        guild_name = interaction.guild.name
        voice_channel_link = await voice_state.channel.create_invite(max_age=86400)
        await self.player.send(f"üéâ {member.name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –≤ –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–º–∞–Ω—Ç—É –≤ {guild_name}. –ó–∞—Ö–æ–¥–∏ –±—ã—Å—Ç—Ä–µ–µ >>\n {voice_channel_link}")
        for child in self.children:
            if isinstance(child, disnake.ui.Button):
                child.disabled = True
        await interaction.message.edit(view=self)
        self.stop()
        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                              description=f"{self.player.name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!",
                              color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')
        await interaction.message.delete()
        await interaction.send(embed=embed)



    @disnake.ui.button(style=disnake.ButtonStyle.gray, label="–ê–Ω–æ–Ω–∏–º–Ω–æ", custom_id="anonymously")
    async def anonymously(self, button: disnake.ui.Button, interaction):
        await interaction.response.defer()
        member = interaction.user
        voice_state = member.voice
        guild_name = interaction.guild.name
        voice_channel_link = await voice_state.channel.create_invite(max_age=86400)
        await self.player.send(f"üéâ –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–º–∞–Ω—Ç—É –≤ {guild_name}. –ó–∞—Ö–æ–¥–∏ –±—ã—Å—Ç—Ä–µ–µ >>\n {voice_channel_link}")
        for child in self.children:
            if isinstance(child, disnake.ui.Button):
                child.disabled = True
        await interaction.message.edit(view=self)
        self.stop()
        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                              description=f"{self.player.name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!",
                              color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')
        await interaction.message.delete()
        await interaction.send(embed=embed)

class InviteSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectinvite",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if player.voice and player.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        view = InviteSelectButton(player)
        embed = disnake.Embed(title="‚ùì –í–æ–ø—Ä–æ—Å", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏—à–ª–∞—à–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –æ—Ç –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞?", color=0x2B2D31)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed, view=view)

class InviteSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(InviteSelect())

class AllowSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectallow",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if player.voice and player.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await channel.set_permissions(player, connect=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description="–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class AllowSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(AllowSelect())

class ForbidSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectforbid",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if player.voice and player.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await channel.set_permissions(player, connect=False)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description="–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class ForbidSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(ForbidSelect())

class MuteSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectmute",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if player.voice and player.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await player.edit(mute=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description="–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class MuteSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(MuteSelect())

class HearSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selecthear",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if player.voice and player.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await player.edit(deafen=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description="–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç —Å–ª—É—àa—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class HearSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(HearSelect())

class BitrateModal(disnake.ui.Modal):
    def __init__(self, arg) -> None:
        self.arg = arg
        components = [
            disnake.ui.TextInput(label="–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ —á–∏—Å–ª–æ", placeholder="–û—Ç 8 –¥–æ 384", custom_id="bitratemodal")
        ]

        super().__init__(title="–°–º–µ–Ω–∞ –±–∏—Ç—Ä–µ–π—Ç–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞", components=components, custom_id="bitratemodalg")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        bitrate = int(interaction.text_values["bitratemodal"])
        if bitrate < 8000:
            await interaction.response.send_message("–ó–Ω–∞—á–µ–Ω–∏–µ –±–∏—Ç—Ä–µ–π—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 8000.", ephermal=True)
            return
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(bitrate=bitrate)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–ë–∏—Ç—Ä–µ–π—Ç –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω –Ω–∞ `{bitrate}`", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

class SelectSettings(disnake.ui.StringSelect):
    def __init__(self):
        super().__init__()
        options = [
            disnake.SelectOption(label="–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", value="name", emoji="<:VoiceName:1113760036792057866>"),
            disnake.SelectOption(label="–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç", value="limit", emoji="<:VoiceLimit:1113773531470241822>"),
            disnake.SelectOption(label="–ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å–Ω–∏–∫–∞", value="kick", emoji="<:VoiceKick:1113772156589965352>"),
            disnake.SelectOption(label="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å–Ω–∏–∫–∞", value="invite", emoji="<:VoiceInvite:1113780097833508866>"),
            disnake.SelectOption(label="–†–∞–∑—Ä–µ—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="allow", emoji="<:VoiceAllow:1113784060167323719>"),
            disnake.SelectOption(label="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="forbid", emoji="<:VoiceDeny:1113783805606637658>"),
            disnake.SelectOption(label="–ó–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="mute", emoji="<:VoiceMute:1113793201573220432>"),
            disnake.SelectOption(label="–ó–∞–≥–ª—É—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="hear", emoji="<:VoiceHear:1113814627634130996>"),
            disnake.SelectOption(label="–ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ç—Ä–µ–π—Ç", value="bitrate", emoji="<:VoiceBiterate:1113778911042621571>"),
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é",
            options=options,
            custom_id="selectsettings",
        )

    async def callback(self, interaction: disnake.MessageInteraction):
        member = interaction.user
        voice_state = member.voice
        if voice_state is None or voice_state.channel is None or not isinstance(voice_state.channel,
                                                                                disnake.VoiceChannel):
            await interaction.response.send_message(
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
            return
        channel = voice_state.channel
        if member.id not in voice or voice[member.id] != channel.id:
            await interaction.response.send_message(
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª—å—é.", ephemeral=True)
            return
        if self.values[0] == "name":
            await interaction.response.send_modal(NameModal(self.values[0]))
        if self.values[0] == "limit":
            await interaction.response.send_modal(LimitModal(self.values[0]))
        if self.values[0] == "kick":
            view = KickSelectView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∏–∂–µ:", view=view, ephemeral=True)
        if self.values[0] == "invite":
            view = InviteSelectView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∏–∂–µ:", view=view, ephemeral=True)
        if self.values[0] == "allow":
            view = AllowSelectView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∏–∂–µ:", view=view, ephemeral=True)
        if self.values[0] == "forbid":
            view = ForbidSelectView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∏–∂–µ:", view=view, ephemeral=True)
        if self.values[0] == "mute":
            view = MuteSelectView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∏–∂–µ:", view=view, ephemeral=True)
        if self.values[0] == "hear":
            view = HearSelectView()
            await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∏–∂–µ:", view=view, ephemeral=True)
        if self.values[0] == "bitrate":
            await interaction.response.send_modal(BitrateModal(self.values[0]))

class SelectSettingsView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(SelectSettings())

class Create(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.persistents_views_added = False

    @commands.Cog.listener('on_ready')
    async def on_ready(self):
        global voice
        try:
            with open(voice_file, 'r') as f:
                voice = json.load(f)
        except FileNotFoundError:
            voice = {}

    @commands.Cog.listener('on_voice_state_update')
    async def on_voice_state_update(self, member, before, after):
        with open(config_file, 'r') as f:
            data = yaml.safe_load(f)
        category_id = data['category_id']
        category = get(self.bot.get_all_channels(), id=category_id)
        channel_id = data['channel_id']
        global voice
        if after.channel and after.channel.id == channel_id:
            if member.id not in voice:
                voice_channel = await category.create_voice_channel(f'–ö–∞–Ω–∞–ª {member.display_name}', bitrate=None)
                await voice_channel.set_permissions(member, priority_speaker=True)
                await member.move_to(voice_channel)
                await voice_channel.send("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –≤–æ–π—Å!")
                voice[member.id] = voice_channel.id
                save_voice()
        elif before.channel and member.id in voice and before.channel.id == voice[member.id] and not before.channel.members:
            await before.channel.delete()
            del voice[member.id]
            save_voice()
        elif before.channel and before.channel.id in voice and not before.channel.members and len(before.channel.members) == 0:
            await before.channel.delete()
            del voice[member.id]
            save_voice()
        else:
            pass

    @commands.slash_command(name="setup", description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç–∞–º–∏")
    async def setup(self, ctx):
        view = SelectSettingsView()
        embed1 = disnake.Embed(color=0x2B2D31)
        embed1.set_image(url="https://cdn.discordapp.com/attachments/1087624157333819452/1113836305554616433/interfeis.png")
        embed2 = disnake.Embed(title="", description=
                                f"###  <:VoiceName:1113760036792057866> - –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã\n"
                                f"###  <:VoiceLimit:1113773531470241822> - –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã\n"
                                f"###  <:VoiceKick:1113772156589965352> - –ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –≤–∞—à–µ–π –∫–æ–º–∞–Ω—Ç—ã\n"
                                f"###  <:VoiceInvite:1113780097833508866> - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
                                f"###  <:VoiceAllow:1113784060167323719> - –†–∞–∑—Ä–µ—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
                                f"###  <:VoiceDeny:1113783805606637658> - –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
                                f"###  <:VoiceMute:1113793201573220432> - –ó–∞/–†–∞–∑–ú—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
                                f"###  <:VoiceHear:1113814627634130996> - –ó–∞/–†–∞–∑–ì–ª—É—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
                                f"###  <:VoiceBiterate:1113778911042621571> - –ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ç—Ä–µ–π—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω—Ç—ã", color=0x2B2D31)
        embed2.set_image(url='https://imgur.com/GpL91Zm')
        await ctx.channel.send(embeds=[embed1, embed2], view=view)

    @commands.Cog.listener()
    async def on_connect(self):
        if self.persistents_views_added:
            return

        self.bot.add_view(SelectSettingsView())
        self.persistents_views_added = True

    @commands.slash_command()
    async def voice(self, interaction):
        member = interaction.user
        voice_state = member.voice
        if voice_state is None or voice_state.channel is None or not isinstance(voice_state.channel,
                                                                                disnake.VoiceChannel):
            await interaction.response.send_message(
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
            return
        channel = voice_state.channel
        if member.id not in voice or voice[member.id] != channel.id:
            await interaction.response.send_message(
                "–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª—å—é.", ephemeral=True)
            return
        pass

    @voice.sub_command(description="–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
    async def limit(self, interaction, limit: int = commands.Param(name="–ª–∏–º–∏—Ç")):
        global voice
        if limit < 1 or limit > 99:
            await interaction.response.send_message("–ó–Ω–∞—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –º–µ–∂–¥—É `1` –∏ `99`!", ephemeral=True)
            return
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(user_limit=limit)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–õ–∏–º–∏—Ç –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω –Ω–∞ `{limit}`", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.send(embed=embed)

    @voice.sub_command(description="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
    async def name(self, interaction, name: str = commands.Param(name="–Ω–∞–∑–≤–∞–Ω–∏–µ")):
        if len(name) < 1 or len(name) > 100:
            await interaction.response.send_message("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –º–µ–∂–¥—É `1` –∏ `100`!", ephemeral=True)
            return
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(name=name)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω–æ –Ω–∞ `{name}`", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –≥—á")
    async def kick(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await user.move_to(None)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{user.mention} –∫–∏–∫–Ω—É—Ç –∏–∑ –≤–∞—à–µ–π –∫–æ–º–∞–Ω—Ç—ã!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def invite(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        player = user
        view = InviteSelectButton(player)
        embed = disnake.Embed(title="‚ùì –í–æ–ø—Ä–æ—Å", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏—à–ª–∞—à–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –æ—Ç –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞?", color=0x2B2D31)
        embed.set_footer(text="! –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç—Å—ã–ª–∞–µ—Ç—Å—è –≤ –ª—Å !")
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed, view=view)

    @voice.sub_command(description="–†–∞–∑—Ä–µ—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def allow(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await channel.set_permissions(user, connect=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{user.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def forbid(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await channel.set_permissions(user, connect=False)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{user.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–ó–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def mute(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await user.edit(mute=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{user.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–†–∞–∑–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def unmute(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await user.edit(mute=False)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                              description=f"{user.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–ó–∞–≥–ª—É—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def hear(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await user.edit(deafen=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{user.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç —Å–ª—É—àa—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–†–∞–∑–≥–ª—É—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def unhear(self, interaction, user: disnake.Member = commands.Param(name="—É—á–∞—Å—Ç–Ω–∏–∫")):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await user.edit(deafen=False)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                              description=f"{user.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç —Å–ª—É—àa—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @voice.sub_command(description="–ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ç—Ä–µ–π—Ç")
    async def bitrate(self, interaction, bitrate: int = commands.Param(name="—á–∏—Å–ª–æ")):
        if bitrate < 8000:
            await interaction.response.send_message("–ó–Ω–∞—á–µ–Ω–∏–µ –±–∏—Ç—Ä–µ–π—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 8000.", ephermal=True)
            return
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(bitrate=bitrate)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–ë–∏—Ç—Ä–µ–π—Ç –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω –Ω–∞ `{bitrate}`", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @commands.slash_command(name="voices")
    async def voices(self, interaction):
        pass

    @voices.sub_command(description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ")
    async def info(self, interaction, channel: disnake.VoiceChannel):
        voice_channel = channel
        member_count = len(voice_channel.members)
        channel_name = voice_channel.name
        channel_limit = voice_channel.user_limit
        if channel_limit == 0:
             channel_limit = "‚àû"
        channel_bitrate = voice_channel.bitrate

        embed = disnake.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ", color=0x6b9bba)
        embed.add_field(name="–ù–∞–∑–≤–∞–Ω–∏–µ:", value=f"{channel_name}", inline=False)
        embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:", value=f"{str(member_count)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", inline=False)
        embed.add_field(name="–õ–∏–º–∏—Ç:", value=str(channel_limit), inline=False)
        embed.add_field(name="–ë–∏—Ç—Ä–µ–π—Ç:", value=str(channel_bitrate), inline=False)

        await interaction.response.send_message(embed=embed)

    @commands.user_command(name="–ö–∏–∫–Ω—É—Ç—å –∏–∑ –≤–æ–π—Å–∞")
    async def userkick(self, interaction, user: disnake.Member):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        await user.move_to(None)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{user.mention} –∫–∏–∫–Ω—É—Ç –∏–∑ –≤–∞—à–µ–π –∫–æ–º–∞–Ω—Ç—ã!",
                              color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @commands.user_command(name="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –≤–æ–π—Å")
    async def userinvite(self, interaction, user: disnake.Member):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        player = user
        view = InviteSelectButton(player)
        embed = disnake.Embed(title="‚ùì –í–æ–ø—Ä–æ—Å", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏—à–ª–∞—à–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –æ—Ç –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞?", color=0x2B2D31)
        embed.set_footer(text="! –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç—Å—ã–ª–∞–µ—Ç—Å—è –≤ –ª—Å !")
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed, view=view)

    @commands.user_command(name="–†–∞–∑—Ä–µ—à–∏—Ç—å/–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
    async def userallow(self, interaction, user: disnake.Member):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id not in voice or voice.get(member.id) != channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if user.permissions_in(channel).connect:
            await channel.set_permissions(user, connect=False)
            embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                  description=f"{user.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!",
                                  color=0x6b9bba)
        else:
            await channel.set_permissions(user, connect=True)
            embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                  description=f"{user.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!",
                                  color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @commands.user_command(name="–ó–∞–º—É—Ç–∏—Ç—å/–†–∞–∑–º—É—Ç–∏—Ç—å –≤ –≤–æ–π—Å–µ")
    async def usermute(self, interaction, user: disnake.Member):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if user.voice.mute:
            await user.edit(mute=False)
            embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                  description=f"{user.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç —Å–ª—É—à–∞—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        else:
            await user.edit(mute=True)
            embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                  description=f"{user.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç —Å–ª—É—à–∞—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

    @commands.user_command(name="–ó–∞–≥–ª—É—à–∏—Ç—å/–†–∞–∑–≥–ª—É—à–∏—Ç—å –≤ –≤–æ–π—Å–µ")
    async def userhear(self, interaction, user: disnake.Member):
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        if not voice_state or not voice_state.channel:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if member.id in voice or voice[member.id] == channel.id:
            await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
            return
        if user.voice and user.voice.channel.id != channel.id:
            await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return
        if user.voice.deaf:
            await user.edit(deafen=False)
            embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                  description=f"{user.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç —Å–ª—É—à–∞—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        else:
            await user.edit(deafen=True)
            embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                  description=f"{user.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç —Å–ª—É—à–∞—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        await interaction.response.send_message(embed=embed)

def save_voice():
    with open(voice_file, 'w') as file:
        json.dump(voice, file)

def setup(bot):
    bot.add_cog(Create(bot))