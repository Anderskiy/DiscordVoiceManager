import disnake

from config import *
from db import TempVoices

class NameModal(disnake.ui.Modal):
    def __init__(self, arg) -> None:
        self.arg = arg
        components = [
            disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", custom_id="namemodal")
        ]

        super().__init__(title="–°–º–µ–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞", components=components, custom_id="namemodal")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        name = interaction.text_values["namemodal"]
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(name=name)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω–æ –Ω–∞ **{name}**!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return await interaction.response.send_message(embed=embed, ephemeral=True)

class LimitModal(disnake.ui.Modal):
    def __init__(self, arg) -> None:
        self.arg = arg
        components = [
            disnake.ui.TextInput(label="–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", placeholder="–í–≤–µ–¥–∏—Ç–∏ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", custom_id="limitmodal")
        ]

        super().__init__(title="–°–º–µ–Ω–∞ –ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–æ–π—Å–∞", components=components, custom_id="limitmodalg")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        limit = int(interaction.text_values["limitmodal"])
        if limit < 1 or limit > 99:
            return await interaction.response.send_message("–ó–Ω–∞—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –º–µ–∂–¥—É 1 –∏ 99!", ephemeral=True)
        member = interaction.user
        voice_state = member.voice
        channel = voice_state.channel
        await channel.edit(user_limit=limit)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"–õ–∏–º–∏—Ç –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–º–µ–Ω—ë–Ω –Ω–∞ **{limit}**", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return await interaction.response.send_message(embed=embed, ephemeral=True)

class KickSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectkick",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        voice_state = player.voice
        if not voice_state:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        channel = voice_state.channel
        prof_channel = await TempVoices.load(channel.id)
        if not prof_channel:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        if prof_channel.owner_id == player.id:
            return await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        if player.voice and player.voice.channel.id != channel.id:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        await player.move_to(None)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{player.mention} –∫–∏–∫–Ω—É—Ç –∏–∑ –≤–∞—à–µ–π –∫–æ–º–∞–Ω—Ç—ã!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return interaction.response.send_message(embed=embed, ephemeral=True)

class KickSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(KickSelect())

class InviteSelectButton(disnake.ui.View):
    message: disnake.Message

    def __init__(self, player):
        super().__init__(timeout=None)
        self.player = player

    @disnake.ui.button(style=disnake.ButtonStyle.gray, label="–û—Ç –º–µ–Ω—è", custom_id="personally")
    async def personally(self, button: disnake.ui.Button, interaction):
        await interaction.response.defer()
        member = interaction.user
        voice_state = member.voice
        guild_name = interaction.guild.name
        voice_channel_link = await voice_state.channel.create_invite(max_age=86400)
        await self.player.send(f"üéâ **{member.name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –≤ [–≥–æ–ª–æ—Å–æ–≤—É—Ö—É]({voice_channel_link}) –≤ {guild_name}. –ó–∞—Ö–æ–¥–∏ –±—ã—Å—Ç—Ä–µ–µ >>**")
        for child in self.children:
            if isinstance(child, disnake.ui.Button):
                child.disabled = True
        await interaction.message.edit(view=self)
        self.stop()
        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                              description=f"{self.player.name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!",
                              color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')
        await interaction.message.delete()
        await interaction.send(embed=embed)

    @disnake.ui.button(style=disnake.ButtonStyle.gray, label="–ê–Ω–æ–Ω–∏–º–Ω–æ", custom_id="anonymously")
    async def anonymously(self, button: disnake.ui.Button, interaction):
        await interaction.response.defer()
        member = interaction.user
        voice_state = member.voice
        guild_name = interaction.guild.name
        voice_channel_link = await voice_state.channel.create_invite(max_age=86400)
        await self.player.send(f"üéâ **–í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ [–≥–æ–ª–æ—Å–æ–≤—É—Ö—É]({voice_channel_link}) –≤ {guild_name}. –ó–∞—Ö–æ–¥–∏ –±—ã—Å—Ç—Ä–µ–µ >>**")
        for child in self.children:
            if isinstance(child, disnake.ui.Button):
                child.disabled = True
        await interaction.message.edit(view=self)
        self.stop()
        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                              description=f"{self.player.name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!",
                              color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')
        await interaction.message.delete()
        await interaction.send(embed=embed)

class InviteSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectinvite",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        author = interaction.guild.get_member(interaction.author.id)
        channel = interaction.guild.get_channel(author.voice.channel.id)
        prof_channel = await TempVoices.load(author.voice.channel.id)
        if prof_channel.owner_id == player.id:
            return await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        view = InviteSelectButton(player)
        embed = disnake.Embed(title="‚ùì –í–æ–ø—Ä–æ—Å", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –æ—Ç –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞?", color=0x2B2D31)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        message = await channel.send(embed=embed, view=view)
        return interaction.response.send_message(f"{author.mention} -> {message.jump_url}", ephemeral = True)

class InviteSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(InviteSelect())

class AllowSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectallow",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        author = interaction.guild.get_member(interaction.author.id)
        channel = interaction.guild.get_channel(author.voice.channel.id)
        prof_channel = await TempVoices.load(channel.id)
        if prof_channel.owner_id == player.id:
            return await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞—Ö–æ–¥–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü—É –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        await channel.set_permissions(player, connect=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{player.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return interaction.response.send_message(embed=embed, ephemeral=True)

class AllowSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(AllowSelect())

class ForbidSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectforbid",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        author = interaction.guild.get_member(interaction.author.id)
        channel = interaction.guild.get_channel(author.voice.channel.id)
        prof_channel = await TempVoices.load(channel.id)
        if prof_channel and prof_channel.owner_id == player.id:
            return await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –≤—Ö–æ–¥–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü—É –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        await channel.set_permissions(player, connect=False)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{player.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return interaction.response.send_message(embed=embed, ephemeral=True)

class ForbidSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(ForbidSelect())

class MuteSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selectmute",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        voice_state = player.voice
        if not voice_state:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        channel = voice_state.channel
        prof_channel = await TempVoices.load(channel.id)
        if not prof_channel:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        if prof_channel.owner_id == player.id:
            return await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        if player.voice and player.voice.channel.id != channel.id:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        await player.edit(mute=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{player.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return await interaction.response.send_message(embed=embed, ephemeral=True)

class MuteSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(MuteSelect())

class HearSelect(disnake.ui.UserSelect):

    def __init__(self) -> None:
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            min_values=1,
            max_values=1,
            custom_id="selecthear",
        )

    async def callback(self, interaction: disnake.MessageInteraction, /) -> None:
        player = self.values[0]
        voice_state = player.voice
        if not voice_state:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        channel = voice_state.channel
        prof_channel = await TempVoices.load(channel.id)
        if not prof_channel:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        if prof_channel.owner_id == player.id:
            return await interaction.response.send_message(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        if player.voice and player.voice.channel.id != channel.id:
            return await interaction.response.send_message(
                "–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        await player.edit(deafen=True)

        embed = disnake.Embed(title="‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", description=f"{player.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç —Å–ª—É—àa—Ç—å –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É!", color=0x6b9bba)
        embed.set_image(url='https://imgur.com/GpL91Zm')

        return interaction.response.send_message(embed=embed, ephemeral=True)

class HearSelectView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(HearSelect())

class SelectSettings(disnake.ui.StringSelect):
    def __init__(self):
        super().__init__()
        options = [
            disnake.SelectOption(label="–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", value="name", emoji=name_emoji),
            disnake.SelectOption(label="–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç", value="limit", emoji=limit_emoji),
            disnake.SelectOption(label="–ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å–Ω–∏–∫–∞", value="kick", emoji=kick_emoji),
            disnake.SelectOption(label="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å–Ω–∏–∫–∞", value="invite", emoji=invite_emoji),
            disnake.SelectOption(label="–†–∞–∑—Ä–µ—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="allow", emoji=allow_emoji),
            disnake.SelectOption(label="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="forbid", emoji=forbid_emoji),
            disnake.SelectOption(label="–ó–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="mute", emoji=mute_emoji),
            disnake.SelectOption(label="–ó–∞–≥–ª—É—à–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value="hear", emoji=hear_emoji),
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é",
            options=options,
            custom_id="selectsettings",
        )

class SelectSettingsView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

        self.add_item(SelectSettings())